__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/monopolized/github/languagescavengers/UI/components/ButtonSkip.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _vectorIcons = _require(_dependencyMap[3], "@expo/vector-icons");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        ButtonSkip: {
            displayName: "ButtonSkip"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/monopolized/github/languagescavengers/UI/components/ButtonSkip.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var ButtonSkip = _wrapComponent("ButtonSkip")(function (_React$Component) {
        _inherits(ButtonSkip, _React$Component);

        function ButtonSkip() {
            _classCallCheck(this, ButtonSkip);

            return _possibleConstructorReturn(this, (ButtonSkip.__proto__ || Object.getPrototypeOf(ButtonSkip)).apply(this, arguments));
        }

        _createClass(ButtonSkip, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react3.default.createElement(
                    _reactNative.TouchableHighlight,
                    {
                        style: styles.container,
                        onPress: function onPress() {
                            return _this2.props.this.props.clickHandler();
                        },
                        underlayColor: "white",
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 16
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.Button,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 21
                            }
                        },
                        _react3.default.createElement(_vectorIcons.FontAwesome, {
                            name: "arrow-right",
                            size: 60,
                            style: styles.Arrow,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 22
                            }
                        })
                    )
                );
            }
        }]);

        return ButtonSkip;
    }(_react3.default.Component));

    exports.default = ButtonSkip;

    var styles = _reactNative.StyleSheet.create({
        container: {},
        Button: {
            alignItems: 'center',
            justifyContent: 'center',
            height: 100,
            width: 100,
            backgroundColor: '#ff0000',
            borderRadius: 20,
            margin: 15,
            shadowOpacity: 0.75,
            shadowRadius: 2,
            shadowColor: 'grey',
            shadowOffset: {
                height: 8,
                width: 0
            }
        },
        Arrow: {
            color: '#FFFFFF'
        }
    });
});